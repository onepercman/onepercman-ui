import { ColorPicker as BaseColorPicker } from "@ark-ui/react";
export declare const colorPicker: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>;
export declare const ColorPicker: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.RootProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>> & {
    Root: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.RootProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    RootProvider: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.RootProviderProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Area: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    AreaBackground: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaBackgroundProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    AreaThumb: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaThumbProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelInput: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelInputProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLInputElement>>;
    ChannelSlider: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderLabel: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderLabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    ChannelSliderThumb: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderThumbProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderTrack: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderTrackProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderValueText: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderValueTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    Content: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Context: import("react").ForwardRefExoticComponent<BaseColorPicker.ContextProps & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    Control: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ControlProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    EyeDropperTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.EyeDropperTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    FormatSelect: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.FormatSelectProps & import("react").RefAttributes<HTMLSelectElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSelectElement>>;
    FormatTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.FormatTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    HiddenInput: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.HiddenInputProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLInputElement>>;
    Label: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.LabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    Positioner: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.PositionerProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Swatch: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchGroup: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchGroupProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchIndicator: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    TransparencyGrid: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.TransparencyGridProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Trigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.TriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    ValueSwatch: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ValueSwatchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ValueText: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ValueTextProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    View: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ViewProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
} & Readonly<{
    Root: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.RootProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    RootProvider: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.RootProviderProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Area: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    AreaBackground: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaBackgroundProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    AreaThumb: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.AreaThumbProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelInput: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelInputProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLInputElement>>;
    ChannelSlider: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderLabel: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderLabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    ChannelSliderThumb: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderThumbProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderTrack: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderTrackProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ChannelSliderValueText: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ChannelSliderValueTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    Content: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Context: import("react").ForwardRefExoticComponent<BaseColorPicker.ContextProps & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    Control: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ControlProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    EyeDropperTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.EyeDropperTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    FormatSelect: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.FormatSelectProps & import("react").RefAttributes<HTMLSelectElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSelectElement>>;
    FormatTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.FormatTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    HiddenInput: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.HiddenInputProps & import("react").RefAttributes<HTMLInputElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLInputElement>>;
    Label: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.LabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    Positioner: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.PositionerProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Swatch: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchGroup: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchGroupProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchIndicator: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    SwatchTrigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.SwatchTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    TransparencyGrid: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.TransparencyGridProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Trigger: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.TriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLButtonElement>>;
    ValueSwatch: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ValueSwatchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ValueText: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ValueTextProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    View: import("react").ForwardRefExoticComponent<Omit<BaseColorPicker.ViewProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
}>;
//# sourceMappingURL=color-picker.d.ts.map