import { TreeView as BaseTreeView } from "@ark-ui/react";
import { ComponentMetadata, ComposedTVProps } from "react-tvcx";
export declare const treeView: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>;
export interface TreeViewProps extends ComposedTVProps<typeof treeView> {
}
export interface TreeView extends ComponentMetadata {
    (props: TreeViewProps): React.ReactElement | null;
}
export declare const TreeView: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.RootProps<unknown> & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>> & {
    Root: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.RootProps<unknown> & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    RootProvider: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.RootProviderProps<unknown> & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Context: import("react").ForwardRefExoticComponent<BaseTreeView.ContextProps<unknown> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    Branch: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchContent: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchControl: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchControlProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchIndicator: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchText: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    BranchTrigger: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchTriggerProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Item: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    NodeContext: import("react").ForwardRefExoticComponent<BaseTreeView.NodeContextProps & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    NodeProvider: import("react").ForwardRefExoticComponent<BaseTreeView.NodeProviderProps<unknown> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    ItemIndicator: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ItemText: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    Label: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.LabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    Tree: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.TreeProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
} & Readonly<{
    Root: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.RootProps<unknown> & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    RootProvider: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.RootProviderProps<unknown> & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & object & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Context: import("react").ForwardRefExoticComponent<BaseTreeView.ContextProps<unknown> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    Branch: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchContent: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchControl: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchControlProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchIndicator: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    BranchText: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    BranchTrigger: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.BranchTriggerProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    Item: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    NodeContext: import("react").ForwardRefExoticComponent<BaseTreeView.NodeContextProps & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    NodeProvider: import("react").ForwardRefExoticComponent<BaseTreeView.NodeProviderProps<unknown> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<never>>;
    ItemIndicator: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemIndicatorProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
    ItemText: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.ItemTextProps & import("react").RefAttributes<HTMLSpanElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLSpanElement>>;
    Label: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.LabelProps & import("react").RefAttributes<HTMLLabelElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLLabelElement>>;
    Tree: import("react").ForwardRefExoticComponent<Omit<BaseTreeView.TreeProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("tailwind-variants").VariantProps<import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "", unknown, unknown, undefined>>> & import("react-tvcx").UnstyledProps & import("react").RefAttributes<HTMLDivElement>>;
}>;
//# sourceMappingURL=tree-view.d.ts.map