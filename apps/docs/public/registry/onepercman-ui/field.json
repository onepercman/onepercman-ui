{
  "name": "field.tsx",
  "meta": {
    "name": "onepercman-ui",
    "source": "https://github.com/onepercman/onepercman-ui/blob/main/packages/ui/src/field.tsx",
    "description": "",
    "license": "https://github.com/onepercman/onepercman-ui/tree/main",
    "tags": [
      "ui"
    ]
  },
  "files": [
    {
      "name": "field.tsx",
      "content": "// onepercman-ui\n// https://github.com/onepercman/onepercman-ui\n\"use client\"\n\nimport { Field as BaseField } from \"@ark-ui/react\"\nimport {\n  ComponentMetadata,\n  ComposedTVProps,\n  createComponentFactory,\n  createComponentTree,\n} from \"react-tvcx\"\nimport { tv } from \"tailwind-variants\"\n\nexport const field = tv({\n  base: \"flex flex-col gap-2\",\n  slots: {\n    label: \"font-medium\",\n    errorText: \"text-xs text-error\",\n    helperText: \"\",\n  },\n  variants: {\n    size: {\n      xs: { label: \"text-xs\" },\n      sm: { label: \"text-sm\" },\n      md: { label: \"text-base\" },\n      lg: { label: \"text-lg\" },\n    },\n    invalid: {\n      true: {\n        label: \"text-error\",\n      },\n    },\n    required: {\n      true: {\n        label: \"after:ml-1 after:inline after:text-error after:content-['*']\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n})\n\nconst { withRoot, withSlot } = createComponentFactory(field)\n\nconst Context = withSlot(BaseField.Context)\nconst ErrorText = withSlot(BaseField.ErrorText, \"errorText\")\nconst HelperText = withSlot(BaseField.HelperText, \"helperText\")\nconst Input = withSlot(BaseField.Input)\nconst Label = withSlot(BaseField.Label, \"label\")\nconst Root = withRoot(BaseField.Root, \"base\")\nconst RootProvider = withSlot(BaseField.RootProvider)\nconst Select = withSlot(BaseField.Select)\nconst Textarea = withSlot(BaseField.Textarea)\n\nexport interface FieldProps extends ComposedTVProps<typeof field> {}\n\nexport interface Field extends ComponentMetadata {\n  (props: FieldProps): React.ReactElement | null\n}\n\nexport const Field = createComponentTree(Root, {\n  Context,\n  ErrorText,\n  HelperText,\n  Input,\n  Label,\n  Root,\n  RootProvider,\n  Select,\n  Textarea,\n})\n\nField.displayName = \"Field\"\n\nexport default Field\n"
    }
  ]
}