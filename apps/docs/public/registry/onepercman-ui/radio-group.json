{
  "name": "radio-group.tsx",
  "meta": {
    "name": "onepercman-ui",
    "source": "https://github.com/onepercman/onepercman-ui/blob/main/packages/ui/src/radio-group.tsx",
    "description": "",
    "license": "https://github.com/onepercman/onepercman-ui",
    "tags": [
      "ui"
    ]
  },
  "files": [
    {
      "name": "radio-group.tsx",
      "content": "\"use client\"\n\nimport { RadioGroup as BaseRadioGroup } from \"@ark-ui/react\"\nimport React from \"react\"\nimport {\n  ComponentMetadata,\n  ComposedTVProps,\n  createComponentFactory,\n  createComponentTree,\n} from \"react-tvcx\"\nimport { tv } from \"tailwind-variants\"\n\nexport const radioGroup = tv({\n  base: \"flex flex-col gap-2\",\n  slots: {\n    item: \"inline-flex cursor-pointer items-center gap-2\",\n    itemText: \"\",\n    control:\n      \"flex rounded-full border-2 border-line p-1 text-sm text-transparent duration-300 after:h-full after:w-full after:rounded-full after:bg-transparent after:content-[''] data-[hover]:border-primary data-[state=checked]:border-primary data-[state=checked]:after:bg-primary\",\n  },\n  variants: {\n    size: {\n      xs: { label: \"text-xs\", itemText: \"text-xs\", control: \"h-4 w-4\" },\n      sm: { label: \"text-sm\", itemText: \"text-sm\", control: \"h-5 w-5\" },\n      md: { label: \"text-md\", itemText: \"text-md\", control: \"h-6 w-6\" },\n      lg: { label: \"text-lg\", itemText: \"text-lg\", control: \"h-7 w-7\" },\n    },\n    invalid: {\n      true: {\n        label: \"text-error\",\n        control:\n          \"data-[state=checked]:border-error data-[state=checked]:after:bg-error\",\n        itemText: \"data-[state=checked]:text-error\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n})\n\nconst { withRoot, withSlot } = createComponentFactory(radioGroup)\n\nconst Root = withRoot(BaseRadioGroup.Root, \"base\")\nconst RootProvider = withRoot(BaseRadioGroup.RootProvider)\nconst Context = withSlot(BaseRadioGroup.Context)\nconst Indicator = withSlot(BaseRadioGroup.Indicator)\nconst Item = withSlot(BaseRadioGroup.Item, \"item\")\nconst ItemContext = withSlot(BaseRadioGroup.ItemContext)\nconst ItemControl = withSlot(BaseRadioGroup.ItemControl, \"control\")\nconst ItemHiddenInput = withSlot(BaseRadioGroup.ItemHiddenInput)\nconst ItemText = withSlot(BaseRadioGroup.ItemText, \"itemText\")\nconst Label = withSlot(BaseRadioGroup.Label)\n\nconst CustomItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item>\n>(function ({ children, ...props }, ref) {\n  return (\n    <Item ref={ref} {...props}>\n      <ItemControl />\n      <ItemText>{children}</ItemText>\n      <ItemHiddenInput />\n    </Item>\n  )\n})\n\nCustomItem.displayName = \"Item\"\n\nexport interface RadioGroupProps extends ComposedTVProps<typeof radioGroup> {}\n\nexport interface RadioGroup extends ComponentMetadata {\n  (props: RadioGroupProps): React.ReactElement | null\n}\n\nexport const RadioGroup = createComponentTree(Root, {\n  Root,\n  RootProvider,\n  Context,\n  Indicator,\n  Item: CustomItem,\n  ItemContext,\n  ItemControl,\n  ItemHiddenInput,\n  ItemText,\n  Label,\n})\n\nRadioGroup.displayName = \"RadioGroup\"\n"
    }
  ]
}