{
  "name": "switch.tsx",
  "meta": {
    "name": "onepercman-ui",
    "source": "https://github.com/onepercman/onepercman-ui/blob/main/packages/ui/src/switch.tsx",
    "description": "",
    "license": "https://github.com/onepercman/onepercman-ui/tree/main",
    "tags": [
      "ui"
    ]
  },
  "files": [
    {
      "name": "switch.tsx",
      "content": "// onepercman-ui\n// https://github.com/onepercman/onepercman-ui\n\"use client\"\n\nimport { Switch as BaseSwitch, SwitchRootProps } from \"@ark-ui/react\"\nimport React from \"react\"\nimport {\n  ComponentMetadata,\n  ComposedTVProps,\n  createComponentFactory,\n  createComponentTree,\n} from \"react-tvcx\"\nimport { tv } from \"tailwind-variants\"\n\nexport const switchVariants = tv({\n  base: \"inline-flex cursor-pointer items-center gap-2\",\n  slots: {\n    label: \"\",\n    control: [\n      \"relative flex rounded-full bg-default transition-colors\",\n      \"data-[state=checked]:bg-primary\",\n    ],\n    thumb: [\n      \"absolute bottom-1 left-1 top-1 aspect-square rounded-full bg-muted transition-all\",\n      \"data-[state=checked]:bg-white\",\n    ],\n  },\n  variants: {\n    size: {\n      xs: {\n        label: \"text-xs\",\n        control: \"h-4 w-7 text-xs\",\n        thumb: \"data-[state=checked]:left-4\",\n      },\n      sm: {\n        label: \"text-sm\",\n        control: \"h-5 w-9 text-sm\",\n        thumb: \"data-[state=checked]:left-5\",\n      },\n      md: {\n        label: \"text-base\",\n        control: \"h-6 w-11 text-base\",\n        thumb: \"data-[state=checked]:left-6\",\n      },\n      lg: {\n        label: \"text-lg\",\n        control: \"h-8 w-14 text-lg\",\n        thumb: \"data-[state=checked]:left-7\",\n      },\n    },\n    indeterminate: {\n      true: {\n        control:\n          \"data-[state=checked]:bg-primary data-[state=checked]:text-white\",\n      },\n    },\n    placement: {\n      head: \"flex-row\",\n      tail: \"flex-row-reverse\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n    placement: \"head\",\n    variant: \"outlined\",\n    color: \"primary\",\n  },\n})\n\nconst { withRoot, withSlot } = createComponentFactory(switchVariants)\n\nconst Root = withRoot(BaseSwitch.Root)\nconst RootProvider = withRoot(BaseSwitch.RootProvider)\nconst Context = withSlot(BaseSwitch.Context)\nconst Control = withSlot(BaseSwitch.Control)\nconst HiddenInput = withSlot(BaseSwitch.HiddenInput)\nconst Label = withSlot(BaseSwitch.Label)\nconst Thumb = withSlot(BaseSwitch.Thumb)\n\nexport interface SwitchProps\n  extends SwitchRootProps,\n    ComposedTVProps<typeof switchVariants> {\n  indeterminate?: boolean\n}\n\nexport interface Switch extends ComponentMetadata {\n  (props: SwitchProps): React.ReactElement | null\n}\n\nexport const Switch = createComponentTree(Root, {\n  Root,\n  RootProvider,\n  Context,\n  Control,\n  HiddenInput,\n  Label,\n  Thumb,\n})\n\nSwitch.displayName = \"Switch\"\n"
    }
  ]
}