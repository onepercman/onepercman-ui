{
  "name": "button.tsx",
  "meta": {
    "name": "onepercman-ui",
    "source": "https://github.com/onepercman/onepercman-ui/blob/main/packages/ui/src/button.tsx",
    "description": "",
    "license": "https://github.com/onepercman/onepercman-ui/tree/main",
    "tags": [
      "ui"
    ]
  },
  "files": [
    {
      "name": "button.tsx",
      "content": "// onepercman-ui\n// https://github.com/onepercman/onepercman-ui\n\"use client\"\n\nimport React from \"react\"\nimport { cn, ComposedTVProps, forwardRef } from \"react-tvcx\"\nimport { tv } from \"tailwind-variants\"\nimport { Spinner } from \"./spinner\"\n\nexport const button = tv({\n  base: [\n    \"inline-flex select-none items-center justify-center gap-2 whitespace-nowrap font-semibold\",\n    \"cursor-pointer border-0 border-transparent outline-none ring ring-transparent transition-all\",\n    \"h-[var(--button-size)] min-h-[var(--button-size)] min-w-[var(--button-size)] px-2 text-xs\",\n    \"[&:not(:disabled)]:active:brightness-105\",\n    \"disabled:cursor-not-allowed disabled:opacity-75 disabled:saturate-0 disabled:data-[loading]:saturate-50\",\n  ],\n  variants: {\n    size: {\n      xs: \"px-2 text-xs [--button-size:1.25rem]\",\n      sm: \"px-2 text-sm [--button-size:1.5rem]\",\n      md: \"px-4 text-sm [--button-size:2.25rem]\",\n      lg: \"px-4 [--button-size:2.75rem]\",\n    },\n    variant: {\n      default: \"border-0\",\n      outlined: \"border-2\",\n      ghost: \"border-0 bg-transparent\",\n      light: \"border-0\",\n    },\n    color: {\n      default: \"\",\n      primary: \"\",\n      accent: \"\",\n      info: \"\",\n      success: \"\",\n      warning: \"\",\n      error: \"\",\n    },\n    shape: {\n      normal: \"rounded\",\n      pill: \"rounded-full\",\n      circle: \"aspect-square rounded-full p-0\",\n      square: \"aspect-square rounded p-0\",\n    },\n  },\n  compoundVariants: [\n    // default\n    {\n      variant: \"default\",\n      color: \"default\",\n      class: [\"bg-default\"],\n    },\n    {\n      variant: \"default\",\n      color: \"primary\",\n      class: [\n        \"bg-primary\",\n        \"text-primary-foreground\",\n        \"[&:not(:disabled)]:hover:bg-primary-600\",\n      ],\n    },\n    {\n      variant: \"default\",\n      color: \"info\",\n      class: [\n        \"bg-info\",\n        \"text-success-info\",\n        \"[&:not(:disabled)]:hover:bg-info-600\",\n      ],\n    },\n    {\n      variant: \"default\",\n      color: \"success\",\n      class: [\n        \"bg-success\",\n        \"text-success-foreground\",\n        \"[&:not(:disabled)]:hover:bg-success-600\",\n      ],\n    },\n    {\n      variant: \"default\",\n      color: \"warning\",\n      class: [\n        \"bg-warning\",\n        \"text-warning-foreground\",\n        \"[&:not(:disabled)]:hover:bg-warning-600\",\n      ],\n    },\n    {\n      variant: \"default\",\n      color: \"error\",\n      class: [\n        \"bg-error\",\n        \"text-error-foreground\",\n        \"[&:not(:disabled)]:hover:bg-error-600\",\n      ],\n    },\n    {\n      variant: \"default\",\n      color: \"accent\",\n      class: [\n        \"bg-accent\",\n        \"text-accent-foreground\",\n        \"[&:not(:disabled)]:hover:bg-accent-600\",\n      ],\n    },\n    // light\n    {\n      variant: \"light\",\n      color: \"default\",\n      class: [\n        \"bg-default/20\",\n        \"text-foreground\",\n        \"[&:not(:disabled)]:hover:bg-default/50\",\n      ],\n    },\n    {\n      variant: \"light\",\n      color: \"primary\",\n      class: [\n        \"bg-primary/20\",\n        \"text-primary\",\n        \"[&:not(:disabled)]:hover:bg-primary/50\",\n      ],\n    },\n    {\n      variant: \"light\",\n      color: \"info\",\n      class: [\"bg-info/20\", \"text-info\", \"[&:not(:disabled)]:hover:bg-info/50\"],\n    },\n    {\n      variant: \"light\",\n      color: \"success\",\n      class: [\n        \"bg-success/20\",\n        \"text-success\",\n        \"[&:not(:disabled)]:hover:bg-success/50\",\n      ],\n    },\n    {\n      variant: \"light\",\n      color: \"warning\",\n      class: [\n        \"bg-warning/20\",\n        \"text-warning\",\n        \"[&:not(:disabled)]:hover:bg-warning/50\",\n      ],\n    },\n    {\n      variant: \"light\",\n      color: \"error\",\n      class: [\n        \"bg-error/20\",\n        \"text-error\",\n        \"[&:not(:disabled)]:hover:bg-error/50\",\n      ],\n    },\n    {\n      variant: \"light\",\n      color: \"accent\",\n      class: [\n        \"bg-accent/20\",\n        \"accent-error\",\n        \"[&:not(:disabled)]:hover:bg-accent/50\",\n      ],\n    },\n    // outlined\n    {\n      variant: \"outlined\",\n      color: \"default\",\n      class: [\"border-line\", \"[&:not(:disabled)]:hover:bg-default-600\"],\n    },\n    {\n      variant: \"outlined\",\n      color: \"primary\",\n      class: [\n        \"border-primary text-primary\",\n        \"[&:not(:disabled)]:hover:border-primary-600 [&:not(:disabled)]:hover:text-primary-600\",\n      ],\n    },\n    {\n      variant: \"outlined\",\n      color: \"info\",\n      class: [\n        \"border-info text-info\",\n        \"[&:not(:disabled)]:hover:border-info-600 [&:not(:disabled)]:hover:text-info-600\",\n      ],\n    },\n    {\n      variant: \"outlined\",\n      color: \"success\",\n      class: [\n        \"border-success text-success\",\n        \"[&:not(:disabled)]:hover:border-success-600 [&:not(:disabled)]:hover:text-success-600\",\n      ],\n    },\n    {\n      variant: \"outlined\",\n      color: \"warning\",\n      class: [\n        \"border-warning text-warning\",\n        \"[&:not(:disabled)]:hover:border-warning-600 [&:not(:disabled)]:hover:text-warning-600\",\n      ],\n    },\n    {\n      variant: \"outlined\",\n      color: \"error\",\n      class: [\n        \"border-error text-error\",\n        \"[&:not(:disabled)]:hover:border-error-600 [&:not(:disabled)]:hover:text-error-600\",\n      ],\n    },\n    {\n      variant: \"outlined\",\n      color: \"accent\",\n      class: [\n        \"border-accent text-accent\",\n        \"[&:not(:disabled)]:hover:border-accent-600 [&:not(:disabled)]:hover:text-accent-600\",\n      ],\n    },\n    // ghost\n    {\n      variant: \"ghost\",\n      color: \"default\",\n      class: [\"text-foreground\", \"[&:not(:disabled)]:hover:bg-default\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"primary\",\n      class: [\"text-primary\", \"[&:not(:disabled)]:hover:bg-primary/10\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"info\",\n      class: [\"text-info\", \"[&:not(:disabled)]:hover:bg-info/10\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"success\",\n      class: [\"text-success\", \"[&:not(:disabled)]:hover:bg-success/10\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"warning\",\n      class: [\"text-warning\", \"[&:not(:disabled)]:hover:bg-warning/10\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"error\",\n      class: [\"text-error\", \"[&:not(:disabled)]:hover:bg-error/10\"],\n    },\n    {\n      variant: \"ghost\",\n      color: \"accent\",\n      class: [\"text-accent\", \"[&:not(:disabled)]:hover:bg-accent/10\"],\n    },\n  ],\n  defaultVariants: {\n    size: \"md\",\n    variant: \"default\",\n    color: \"default\",\n    shape: \"normal\",\n  },\n})\n\nexport interface ButtonBaseProps {\n  loading?: boolean\n  loadingText?: string\n  leftIcon?: React.ReactElement | React.ReactNode\n  rightIcon?: React.ReactElement | React.ReactNode\n  loadingVariant?: \"default\" | \"transparent\"\n}\n\nexport interface ButtonProps\n  extends ButtonBaseProps,\n    ComposedTVProps<typeof button> {}\n\nfunction useButton({\n  onClick,\n  loading,\n  disabled,\n  ...props\n}: ButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>) {\n  const className = button(props)\n\n  const [asyncLoading, setAsyncLoading] = React.useState(false)\n\n  async function handleClick(ev: React.MouseEvent<HTMLButtonElement>) {\n    if (!onClick) return\n\n    if (onClick.constructor.name === \"AsyncFunction\") {\n      try {\n        setAsyncLoading(true)\n        await onClick(ev)\n      } catch (err) {\n        throw new Error(err as any)\n      } finally {\n        setAsyncLoading(false)\n      }\n    } else {\n      onClick(ev)\n    }\n  }\n\n  const _loading = Boolean(asyncLoading || loading)\n\n  return {\n    ...props,\n    className,\n    onClick: handleClick,\n    loading: _loading,\n    disabled: _loading || disabled,\n  }\n}\n\nexport const Button = forwardRef<\"button\", ButtonProps>(function (\n  {\n    as: Component = \"button\",\n    children,\n    loadingText,\n    loadingVariant = \"transparent\",\n    leftIcon,\n    rightIcon,\n    ...props\n  },\n  ref,\n) {\n  const buttonProps = useButton(props)\n\n  return (\n    <Component\n      ref={ref}\n      type=\"button\"\n      data-loading={buttonProps.loading}\n      {...buttonProps}\n    >\n      {buttonProps.loading && (\n        <Spinner\n          className={loadingVariant === \"default\" ? \"relative\" : \"absolute\"}\n        />\n      )}\n      {leftIcon ? (\n        buttonProps.loading ? (\n          <span\n            className={loadingVariant === \"default\" ? \"hidden\" : \"opacity-0\"}\n          >\n            {leftIcon}\n          </span>\n        ) : (\n          leftIcon\n        )\n      ) : null}\n      {children || loadingText ? (\n        buttonProps.loading ? (\n          <span\n            className={cn({ \"opacity-0\": loadingVariant === \"transparent\" })}\n          >\n            {loadingText || children}\n          </span>\n        ) : (\n          children\n        )\n      ) : null}\n      {rightIcon ? (\n        buttonProps.loading ? (\n          <span\n            className={cn({ \"opacity-0\": loadingVariant === \"transparent\" })}\n          >\n            {rightIcon}\n          </span>\n        ) : (\n          rightIcon\n        )\n      ) : null}\n    </Component>\n  )\n})\n\nButton.displayName = \"Button\"\n"
    }
  ]
}